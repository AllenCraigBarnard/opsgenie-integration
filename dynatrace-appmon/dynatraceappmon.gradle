task prepareDynatraceAppMon(dependsOn: 'generateIntegration') << {
    def destination = "${project.buildDir}/dynatrace-appmon"
    copy {
        from "${project.buildDir}/opsgenie-integration"
        into "${destination}/opsgenie-integration"
    }

    copy {
        from "${project.projectDir}/dynatrace-appmon/marid"
        into "${destination}/opsgenie-integration/marid"
    }

    mergeConfFile("${project.buildDir}/opsgenie-integration/conf/opsgenie-integration.conf",
            "${project.projectDir}/dynatrace-appmon/common/conf/opsgenie-integration.conf.part",
            "${destination}/opsgenie-integration/conf/opsgenie-integration.conf")
}

task packageDynatraceAppMonZip(dependsOn: 'prepareDynatraceAppMon', type: Zip) {
    from "${project.buildDir}/dynatrace-appmon"
    baseName = 'opsgenie-dynatrace-appmon'
    version = project.ext.versions.getProperty('dynatrace-appmon') + project.ext.versionSuffix
}

task packageDynatraceAppMonOS(dependsOn: ['generateIntegrationForNative', 'prepareDynatraceAppMon']) << {
    copyNativeFiles('dynatrace-appmon')

    buildRpm('dynatrace-appmon', 'opsgenie-dynatrace-appmon', 'OpsGenie - Dynatrace AppMon integration files including marid',
            [:], [:])

    buildDeb('dynatrace-appmon', 'opsgenie-dynatrace-appmon', 'OpsGenie - Dynatrace AppMon integration files including marid',
            [:], [:])
}

task packageDynatraceAppMon(dependsOn: ['packageDynatraceAppMonZip', 'packageDynatraceAppMonOS'])